- name: Ensure all repositories are up-to-date
  cron:
    name: Update all repositories
    minute: "15"
    hour: "8-16"
    weekday: "1-5" # on workdays
    job: gitup --depth -1 --prune "$HOME"/Documents

- name: Set fact for logging directory
  set_fact:
    logging_dir: $HOME/Documents/crontab-reports

- name: Ensure path for logging directory exists
  file:
    path: "{{ logging_dir }}"
    state: directory
    mode: 0755

- name: Set crontab logging directory
  cron:
    name: LOGGING_DIR
    env: true
    job: "{{ logging_dir }}"

- name: Ensure dotfiles are applied
  cron:
    name: Ensure dotfiles are applied
    minute: "0"
    hour: "9"
    weekday: "1-5" # on workdays
    job: >-
      log_file_name="$LOGGING_DIR/$(date-iso)-dotfiles.log" &&
      make -f {{ ansible_env.PWD }}/Makefile build >> "$log_file_name"

- name: Report merged remote branches
  cron:
    name: Report merged remote branches
    minute: "0"
    hour: "10"
    weekday: "1" # on Mondays
    job: >-
      log_file_name="$LOGGING_DIR/$(date-iso)-remote-merged-branches.log" &&
      for dir in "$HOME"/Documents/mbio/ot*; do
      gitup --depth -1 --prune "$dir" --exec "git remotely-merged-branches" >> "$log_file_name"
      ;done

- name: Report local branches without remote
  cron:
    name: Report local branches without remote
    minute: "0"
    hour: "10"
    weekday: "1" # on Mondays
    job: >-
      log_file_name="$LOGGING_DIR/$(date-iso)-local-branches-without-remote.log" &&
      for dir in "$HOME"/Documents/mbio/ot*; do
      gitup --depth -1 --prune "$dir" --exec "git local-branches-without-remote" >> "$log_file_name"
      ;done

- name: Report divergent target branches
  cron:
    name: Report divergent target branches
    minute: "0"
    hour: "10"
    weekday: "1" # on Mondays
    job: >-
      log_file_name="$LOGGING_DIR/$(date-iso)-diff-target-branches.log" &&
      make -f "$HOME"/Documents/mbio/oteg/diff-target-branches/Makefile branches | diff-so-fancy &>> "$log_file_name"
